/*
 * This file is part of Blokada.
 *
 * Blokada is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Blokada is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Blokada.  If not, see <https://www.gnu.org/licenses/>.
 *
 * Copyright Â© 2020 Blocka AB. All rights reserved.
 *
 * @author Karol Gusak (karol@blocka.net)
 */

plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

apply plugin: "androidx.navigation.safeargs.kotlin"
apply plugin: "kotlin-kapt"

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.0"
    ndkVersion "21.3.6528147"

    defaultConfig {
        applicationId "org.blokada" // Not a real name, see flavors below
        minSdkVersion 24
        targetSdkVersion 29
        versionCode 505000000
        versionName "5.5.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters 'arm64-v8a', 'armeabi-v7a', 'x86', 'x86_64'
        }
    }

    buildTypes {
        debug {
            // By default it is a 'debuggable' build, signed with a debug key.
        }

        release {
            def f = rootProject.file('keystore.properties')
            if (f.exists()) {
                println "Release build will use Blokada keystore"
                Properties props = new Properties()
                InputStream inputStream = new FileInputStream(f)
                props.load(inputStream)
                inputStream.close()

                signingConfigs {
                    release {
                        storeFile rootProject.file(props['BLOKADA_KEY_PATH'])
                        storePassword props['BLOKADA_STORE_PASSWORD']
                        keyAlias 'blokada'
                        keyPassword props['BLOKADA_KEY_PASSWORD']
                    }
                }
                signingConfig signingConfigs.release
            }

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        beta {
            // 'Beta' are builds used for internal and external beta testing.
            initWith(release)
            matchingFallbacks = ['release']
            debuggable = true
            minifyEnabled false
        }
    }

    // It needs to be defined in order for the flavor setup to work.
    flavorDimensions("model")

    productFlavors {
        full {
            // full lands on blokada.org, and on Huawei App Gallery
            applicationId "org.blokada.origin.alarm"
        }

        google {
            // google build lands on Google Play, missing some features.
            applicationId "org.blokada.alarm.dnschanger"
        }

        escaped {
            // escaped build can be installed on top of google build to get all features.
            applicationId "org.blokada.alarm.dnschanger"
        }

        droid {
            // droid lands on F-Droid.
            applicationId "org.blokada.fem.fdroid"
        }

        xda {
            // xda lands on XDA Labs.
            applicationId "org.blokada.fem.xda"
        }
    }

    compileOptions {
        // Flag to enable support for the new language APIs
        coreLibraryDesugaringEnabled true

        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/legacy/kotlin'

        main.java.srcDirs += 'src/engine/kotlin'
        main.jniLibs.srcDirs += 'src/engine/jniLibs'

        debug.java.srcDirs += 'src/mock/kotlin'

        google.res.srcDirs += 'src/google/res'
        google.java.srcDirs += 'src/google/kotlin'

        full.res.srcDirs += 'src/notgoogle/res'
        full.java.srcDirs += 'src/notgoogle/kotlin'

        droid.res.srcDirs += 'src/notgoogle/res'
        droid.java.srcDirs += 'src/notgoogle/kotlin'

        xda.res.srcDirs += 'src/notgoogle/res'
        xda.java.srcDirs += 'src/notgoogle/kotlin'

        escaped.res.srcDirs += 'src/notgoogle/res'
        escaped.java.srcDirs += 'src/notgoogle/kotlin'

        // Do not include translations in debug builds (does not clutter search during development)
        release.res.srcDirs += 'src/translations/res'
        beta.res.srcDirs += 'src/translations/res'
    }
}

dependencies {
    // forgot what is it for
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.0.10'

    // androidx and kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0-alpha02'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    implementation 'androidx.navigation:navigation-fragment:2.3.0'
    implementation 'androidx.navigation:navigation-ui:2.3.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.0'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.0'
    implementation 'androidx.preference:preference-ktx:1.1.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.browser:browser:1.2.0'
    implementation 'androidx.webkit:webkit:1.3.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.8'

    // json
    implementation 'com.squareup.moshi:moshi:1.9.3'
    implementation 'com.squareup.moshi:moshi-adapters:1.9.3'
    kapt 'com.squareup.moshi:moshi-kotlin-codegen:1.9.3'

    // http and rest
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.14.9'

    // dynamic translations
    implementation 'com.akexorcist:localization:1.2.6'

    // engine deps
    implementation 'org.pcap4j:pcap4j-core:1.7.7'
    implementation 'org.pcap4j:pcap4j-packetfactory-propertiesbased:1.7.7'
    implementation 'dnsjava:dnsjava:2.1.9'
    implementation 'org.slf4j:slf4j-nop:1.6.1'

    // unzip default blocklist
    implementation 'net.lingala.zip4j:zip4j:2.6.4'

    // test deps
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    // legacy (for import of v4 settings)
    implementation 'io.paperdb:paperdb:2.7.1'

    // for Tasker integration
    implementation 'com.twofortyfouram:android-plugin-client-sdk-for-locale:4.0.3'
}

apply plugin: 'org.mozilla.rust-android-gradle.rust-android'

cargo {
    module  = "../blocka_engine"
    libname = "blocka_dns"
    targets = ["arm", "arm64", "x86", "x86_64"]
    profile = "release"
}
